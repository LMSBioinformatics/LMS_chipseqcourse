GettingData
========================================================

As we saw there are many places to grab data from.
========================================================

Some of the most popular are GEO, SRA and ENA.

Interfacing with Repositories in R.
========================================================
Lets load the packages we need, the repo should be obvious.

```{r}
library(GEOquery)
library(SRAdb)
```

GEOquery
========================================================
So lets go look for some samples we have already downloaded
We are using Encode data so we find some GEOinforma tion [here](http://hgdownload.cse.ucsc.edu/goldenPath/mm9/encodeDCC/wgEncodeSydhTfbs/files.txt)

One we are interest in is GSM912906

```{r, echo=T,cache=T}
gds <- getGEO("GSM11805")
```

Have a look at gds object

GEOquery
========================================================
So lets go look for some samples we have already downloaded
We are using Encode data so we find some GEOinforma tion [here](http://hgdownload.cse.ucsc.edu/goldenPath/mm9/encodeDCC/wgEncodeSydhTfbs/files.txt)

One we are interest in is GSM912906

```{r, echo=T,cahce=T}
gds <- getGEO("GSM912906")
```

Have a look at gds object


GEOquery
========================================================
GEO has much of the meta data available try meta(gds)

```{r, echo=T,cahce=T}
Meta(gds)$supplementary_file_1
Meta(gds)$supplementary_file_2
Meta(gds)$supplementary_file_3
```
With the third file pointing to SRA

SRAdb
========================================================
SRAdb acts an interface between SRA and ENA

```{r, echo=T,cache=T}
fileToGen <- basename(Meta(gds)$supplementary_file_3) 
fileToGen
```
 SRAdb
========================================================
 The first step in querying SRAdb is to download their schema.
 ```{r, echo=T,cache=T}
 if(!file.exists("/Users/tcarroll/chipseqcourseNew/SRAmetadb.sqlite")){
  sqlfile <<- getSRAdbFile()
}else{
  sqlfile <- "/Users/tcarroll/chipseqcourseNew/SRAmetadb.sqlite"
}
sra_con <- dbConnect(SQLite(),sqlfile)

 ```

 SRAdb
========================================================
Now we can retrieve the location of file we want in fastq format
 ```{r, echo=T,cache=T}
 rs = listSRAfile( c(fileToGen), sra_con, fileType = "fastq") 
 rs$ftp
 ```
AnnotationHub
========================================================
AnnotationHub provides a nice interface to retrieve data into R
Try the code below for yourself.
```{r,eval=F,echo=T,cache=T}
ah = AnnotationHub()
display(ah)
 ```

 
